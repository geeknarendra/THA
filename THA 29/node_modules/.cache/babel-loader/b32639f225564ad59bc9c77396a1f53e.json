{"ast":null,"code":"var _jsxFileName = \"/media/noob/Data_File\\u2764\\u2764/Git Pushed/THA/THA 29/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCity, addCityData } from \"./actions\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const city = useSelector(state => state.addCity); // const cityData = useSelector((state) => state.addCityData);\n\n  const cityData = {};\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [cityData.location ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: cityData.current.condition.icon,\n          id: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h\", {\n          children: [cityData.current.temp_c, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"input\",\n          type: \"text\",\n          placeholder: \"enter city\",\n          value: city,\n          onChange: e => {\n            dispatch(addCity(e.target.state));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          onClick: () => {\n            dispatch(addCityData(city));\n          },\n          children: \"go\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), cityData.location ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h\", {\n            children: cityData.location.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h\", {\n          id: \"error\",\n          children: \"No Place Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"26JC9En5aLNWOSTXWfdevaKvl5Y=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/media/noob/Data_File❤❤/Git Pushed/THA/THA 29/src/App.jsx"],"names":["useDispatch","useSelector","addCity","addCityData","App","city","state","cityData","dispatch","location","current","condition","icon","temp_c","e","target","name"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,WAArC;AACA,OAAO,WAAP;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACJ,OAAlB,CAAxB,CADa,CAEb;;AACA,QAAMK,QAAQ,GAAG,EAAjB;AACA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAA,iBACGO,QAAQ,CAACE,QAAT,gBACC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEF,QAAQ,CAACG,OAAT,CAAiBC,SAAjB,CAA2BC,IAArC;AAA2C,UAAA,EAAE,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,qBAAIL,QAAQ,CAACG,OAAT,CAAiBG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,gBAMC,qCAPJ,eASE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,WAAW,EAAC,YAHd;AAIE,UAAA,KAAK,EAAER,IAJT;AAKE,UAAA,QAAQ,EAAGS,CAAD,IAAO;AACfN,YAAAA,QAAQ,CAACN,OAAO,CAACY,CAAC,CAACC,MAAF,CAAST,KAAV,CAAR,CAAR;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AACE,UAAA,EAAE,EAAC,QADL;AAEE,UAAA,OAAO,EAAE,MAAM;AACbE,YAAAA,QAAQ,CAACL,WAAW,CAACE,IAAD,CAAZ,CAAR;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,EAoBGE,QAAQ,CAACE,QAAT,gBACC;AAAA,iCACE;AAAA,sBAAIF,QAAQ,CAACE,QAAT,CAAkBO;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,gBAKC;AAAG,UAAA,EAAE,EAAC,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2CD;;GAjDQZ,G;UACMH,W,EAGID,W;;;KAJVI,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { addCity, addCityData } from \"./actions\";\nimport \"./App.css\";\n\nfunction App() {\n  const city = useSelector((state) => state.addCity);\n  // const cityData = useSelector((state) => state.addCityData);\n  const cityData = {};\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"app\">\n      <header>\n        {cityData.location ? (\n          <div className=\"col\">\n            <img src={cityData.current.condition.icon} id=\"status\" />\n            <h>{cityData.current.temp_c} °C</h>\n          </div>\n        ) : (\n          <></>\n        )}\n        <div className=\"col\">\n          <input\n            id=\"input\"\n            type=\"text\"\n            placeholder=\"enter city\"\n            value={city}\n            onChange={(e) => {\n              dispatch(addCity(e.target.state));\n            }}\n          />\n\n          <button\n            id=\"submit\"\n            onClick={() => {\n              dispatch(addCityData(city));\n            }}\n          >\n            go\n          </button>\n\n          {cityData.location ? (\n            <div>\n              <h>{cityData.location.name}</h>\n            </div>\n          ) : (\n            <h id=\"error\">No Place Found</h>\n          )}\n        </div>\n      </header>\n      {}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}